genrule(
    name = "modify_configure",
    srcs = ["Configure"],
    outs = ["Configure_modified"],
    cmd_bash = "sed -e 's#external/perl/MODULES.txt#external/external~/perl/MODULES.txt#' -e 's#die \"[*]\\{5\\} Unsupported options:#warn \"***** Unsupported options:#' -e 's#configdata[.]pm#configdata_modified.pm#' $(location Configure) > $@",
    cmd_ps = "(Get-Content $(location Configure)) -replace 'external/perl/MODULES.txt', 'external/external~/perl/MODULES.txt' -replace 'die \"[*]\\{5\\} Unsupported options:', 'warn \"***** Unsupported options:' -replace 'configdata.pm', 'configdata_modified.pm' | Set-Content $@",
    executable = True,
)

genrule(
    name = "modify_configdata",
    srcs = ["configdata.pm.in"],
    outs = ["configdata_modified.pm.in"],
    cmd_bash = "sed -e \"s#sourcefile('external', 'perl', 'MODULES.txt#sourcefile('external', 'external~', 'perl', 'MODULES.txt#\" -e \"s#Configure#Configure_modified#\" $(location configdata.pm.in) > $@",
    cmd_ps = "(Get-Content $(location configdata.pm.in)) -replace \"sourcefile('external', 'perl', 'MODULES.txt\", \"sourcefile('external', 'external~', 'perl', 'MODULES.txt\" -replace \"Configure\", \"Configure_modified\" | Set-Content $@",
    executable = True,
)

genrule(
    name = "modify_config",
    srcs = ["config"],
    outs = ["config_modified"],
    cmd_bash = "sed -e \"s#Configure#Configure_modified#\" $(location config) > $@",
    cmd_ps = "(Get-Content $(location config)) -replcae \"Configure\", \"Configure_modified\" | Set-Content $@",
)

genrule(
    name = "modify_dofile",
    srcs = ["util/dofile.pl"],
    outs = ["util/dofile_modified.pl"],
    cmd_bash = "sed -e \"s#external/perl/MODULES.txt#external/external~/perl/MODULES.txt#\" $(location util/dofile.pl) > $@",
    cmd_ps = "(Get-Content $(location Configure)) -replace 'external/perl/MODULES.txt', 'external/external~/perl/MODULES.txt' | Set-Content $@",
)

OPENSSL_DATA = [
    "@external",
    "Configure",
    "config",
] + glob([
    "**/*.pm",
    "**/*.dat",
    "Configurations/*",
    "util/**/*",
    "**/build.info",
    "**/*.in",
    "**/*.h",
    "**/*.c",
    "**/*.S",
    "**/*.pl",
    "**/*.inc",
    "**/*.asn1",
])

OPENSSL_ENV = {
    "PERL5LIB": "external/external~/perl/Text-Template-1.56/lib",
}

sh_binary(
    name = "make_openssl",
    srcs = select({
        "@platforms//os:windows": ["run_windows.sh"],
        "//conditions:default": ["run.sh"],
    }),
    data = OPENSSL_DATA,
    env = OPENSSL_ENV,
)

cc_library(
    name = "ssl",
    srcs = glob([
        "**/libssl.a",
        "**/libssl.lib",
    ]),
    hdrs = glob(["**/include/**/*.h"]),
    data = [":make_openssl"],
    includes = ["include"],
)

cc_library(
    name = "crypto",
    srcs = glob([
        "**/libcrypto.a",
        "**/libcrypto.lib",
    ]),
    hdrs = glob(["**/include/**/*.h"]),
    data = [":make_openssl"],
    includes = ["include"],
)

sh_binary(
    name = "openssl_tests",
    srcs = select({
        "@platforms//os:windows": ["run_windows.sh"],
        "//conditions:default": ["run.sh"],
    }),
    # is_test
    args = ["true"],
    data = OPENSSL_DATA + glob(
        [
            "test/recipes/**/*",
            "**/*.pem",
            "**/*.cnf",
            "**/*.csr",
            "**/*.crt",
            "**/*.csm",
            "**/*.ors",
            "**/*.pfx",
            "**/*.utf8",
            "**/*.key",
            "**/*.der",
            "**/*.default",
            "**/*.bin",
            "**/*.p12",
            "**/*.sct"
        ],
        exclude = [
            "test/recipes/**/*.in",
            "test/recipes/**/*.pl",
            "test-runs/*"
        ],
    ),
    env = OPENSSL_ENV,
)
