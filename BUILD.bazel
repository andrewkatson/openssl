load("@bazel_skylib//lib:dicts.bzl", "dicts")

OPENSSL_DATA = [
    "@external",
    "Configure",
    "config",
] + glob(
    [
        "**/*.pm",
        "**/*.dat",
        "Configurations/*",
        "util/**/*",
        "**/build.info",
        "**/*.in",
        "**/*.h",
        "**/*.c",
        "**/*.S",
        "**/*.pl",
        "**/*.inc",
        "**/*.asn1",
    ],
    exclude = [
        "**/test-runs/**/*",
    ],
)

OPENSSL_ENV = {
    "PERL5LIB": "external/external~/perl/Text-Template-1.56/lib",
}

sh_binary(
    name = "make_openssl",
    srcs = select({
        "@platforms//os:windows": ["run_windows.sh"],
        "//conditions:default": ["run.sh"],
    }),
    data = OPENSSL_DATA,
    env = OPENSSL_ENV,
)

cc_library(
    name = "ssl",
    srcs = glob([
        "**/libssl.a",
        "**/libssl.lib",
    ]),
    hdrs = glob(["**/include/**/*.h"]),
    data = [":make_openssl"],
    includes = ["include"],
)

cc_library(
    name = "crypto",
    srcs = glob([
        "**/libcrypto.a",
        "**/libcrypto.lib",
    ]),
    hdrs = glob(["**/include/**/*.h"]),
    data = [":make_openssl"],
    includes = ["include"],
)

sh_binary(
    name = "openssl_tests",
    srcs = select({
        "@platforms//os:windows": ["run_windows.sh"],
        "//conditions:default": ["run.sh"],
    }),
    # is_test
    args = ["true"],
    data = OPENSSL_DATA + glob(
        [
            "test/recipes/**/*",
            "**/*.pem",
            "**/*.cnf",
            "**/*.csr",
            "**/*.crt",
            "**/*.csm",
            "**/*.ors",
            "**/*.pfx",
            "**/*.utf8",
            "**/*.key",
            "**/*.der",
            "**/*.default",
            "**/*.bin",
            "**/*.p12",
            "**/*.sct",
            "**/*.cms",
            "**/*.txt",
            "**/*.msb",
            "**/*.tmpl"
        ],
        exclude = [
            "test/recipes/**/*.in",
            "test/recipes/**/*.pl",
            "**/test-runs/**/*",
            "util/**/*.txt",
            "Configurations/**/*",
        ],
    ),
    env = select({
        "@platforms//os:windows":
         # The Zi flag must be set otherwise OpenSSL fails to build due to missing .pdb files
         dicts.add({"CFLAGS": "-Zi"}, OPENSSL_ENV),
        "//conditions:default": OPENSSL_ENV,
    })
)
